
#Область ОбработчикиСобытийОбъекта

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("СуммаДоИзменения", Ссылка.Сумма);
	ДополнительныеСвойства.Вставить("ВидРасходаДоИзменения", Ссылка.ВидРасхода);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	
	Если ВидРасхода = Перечисления.ВидыРасходов.Фактический Тогда
		
		СформироватьДвиженияПоРегиструДенежныеСредства();
		УчетДенежныхСредствСервер.СформироватьРасходПоРегиструОстатокЛимитаДенежныхСредств(Сумма);
	
	ИначеЕсли ВидРасхода = Перечисления.ВидыРасходов.Планируемый Тогда
		
		СформироватьДвиженияПоРегиструПланируемыеОстаткиДенежныхСредств();
		
		СоздатьПовторяющиесяСобытия();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Если ДополнительныеСвойства.СуммаДоИзменения <> 0 Тогда
		
		ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
		
		Если ДополнительныеСвойства.ВидРасходаДоИзменения = Перечисления.ВидыРасходов.Фактический Тогда
			УчетДенежныхСредствСервер.СформироватьПриходПоРегиструОстатокЛимитаДенежныхСредств(ДополнительныеСвойства.СуммаДоИзменения);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	Если ВидРасхода = Перечисления.ВидыРасходов.Фактический Тогда
		УчетДенежныхСредствСервер.СформироватьПриходПоРегиструОстатокЛимитаДенежныхСредств(Сумма);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыФункции

Процедура СформироватьДвиженияПоРегиструДенежныеСредства()
	
	Движения.ДенежныеСредства.Записывать = Истина;
	
	Движение = Движения.ДенежныеСредства.ДобавитьРасход();
	Движение.Период = Дата;
	Движение.Сумма = Сумма;

КонецПроцедуры

Процедура СформироватьДвиженияПоРегиструПланируемыеОстаткиДенежныхСредств()
	
	Движения.ПланируемыеОстаткиДенежныхСредств.Записывать = Истина;
	
	Движение = Движения.ПланируемыеОстаткиДенежныхСредств.Добавить();
	Движение.Период = Дата;
	Движение.Сумма = Сумма;
	
КонецПроцедуры

Процедура СоздатьПовторяющиесяСобытия()
	
	Если ПовторяемоеСобытие И КоличествоДнейДляПовторения <> 0 Тогда
		
		ДатаСозданияНовогоПовторяемогоСобытия = ОбщегоНазначенияСервер.ДобавитьКДате(Дата, КоличествоДнейДляПовторения, "ДЕНЬ");
		
		Пока ДатаСозданияНовогоПовторяемогоСобытия < ДатаОкончанияПовторяемыхСобытий Цикл
			
			НовыйДокумент = Документы.РасходДенежныхСредств.СоздатьДокумент();
			НовыйДокумент.Дата = ДатаСозданияНовогоПовторяемогоСобытия;
			НовыйДокумент.ВидРасхода = Перечисления.ВидыРасходов.Планируемый;
			НовыйДокумент.Сумма = Сумма;
			НовыйДокумент.Назначение = Назначение;
			НовыйДокумент.УИДПовторяемыхСобытий = УИДПовторяемыхСобытий;
			НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
			
			ДатаСозданияНовогоПовторяемогоСобытия = ОбщегоНазначенияСервер.ДобавитьКДате(
				НовыйДокумент.Дата, 
				КоличествоДнейДляПовторения,
				"ДЕНЬ");
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти