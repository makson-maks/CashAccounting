
#Область ОбработчикиСобытийОбъекта

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ЭтоНовый", ЭтоНовый());
	ДополнительныеСвойства.Вставить("СуммаДоИзменения", Ссылка.Сумма);
	ДополнительныеСвойства.Вставить("ВидРасходаДоИзменения", Ссылка.ВидРасхода);
	
КонецПроцедуры

Процедура ОбработкаПроведения(Отказ, РежимПроведения)

	ПроведениеСервер.ПодготовитьНаборыЗаписейКПроведению(ЭтотОбъект);
	
	Если ВидРасхода = Перечисления.ВидыРасходов.Фактический Тогда
		
		СформироватьДвиженияПоРегиструДенежныеСредства();
		УчетДенежныхСредствСервер.СформироватьРасходПоРегиструОстатокЛимитаДенежныхСредств(Сумма);
	
	ИначеЕсли ВидРасхода = Перечисления.ВидыРасходов.Планируемый Тогда
		
		СформироватьДвиженияПоРегиструПланируемыеОстаткиДенежныхСредств();
		
		СоздатьПовторяющиесяСобытия();
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработкаУдаленияПроведения(Отказ)
	
	Если ДополнительныеСвойства.СуммаДоИзменения <> 0 Тогда
		
		ПроведениеСервер.ПодготовитьНаборыЗаписейКОтменеПроведения(ЭтотОбъект);
		
		Если ДополнительныеСвойства.ВидРасходаДоИзменения = Перечисления.ВидыРасходов.Фактический Тогда
			УчетДенежныхСредствСервер.СформироватьПриходПоРегиструОстатокЛимитаДенежныхСредств(ДополнительныеСвойства.СуммаДоИзменения);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередУдалением(Отказ)
	
	Если ВидРасхода = Перечисления.ВидыРасходов.Фактический Тогда
		УчетДенежныхСредствСервер.СформироватьПриходПоРегиструОстатокЛимитаДенежныхСредств(Сумма);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Для каждого СтрокаПокупок Из СписокПокупок Цикл
		Если СтрокаПокупок.Цена = 0 Тогда
			Продолжить;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтрокаПокупок.Товар) Тогда
			Продолжить;
		КонецЕсли;
		МенеджерЗаписи = РегистрыСведений.ЦеныНоменклатуры.СоздатьМенеджерЗаписи();
		МенеджерЗаписи.Номенклатура = СтрокаПокупок.Товар;
		МенеджерЗаписи.Цена = СтрокаПокупок.Цена;
		МенеджерЗаписи.Записать();
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыФункции

Процедура СформироватьДвиженияПоРегиструДенежныеСредства()
	
	Движения.ДенежныеСредства.Записывать = Истина;
	
	Движение = Движения.ДенежныеСредства.ДобавитьРасход();
	Движение.Период = Дата;
	Движение.Сумма = Сумма;

КонецПроцедуры

Процедура СформироватьДвиженияПоРегиструПланируемыеОстаткиДенежныхСредств()
	
	Движения.ПланируемыеОстаткиДенежныхСредств.Записывать = Истина;
	
	Движение = Движения.ПланируемыеОстаткиДенежныхСредств.Добавить();
	Движение.Период = Дата;
	Движение.Сумма = Сумма;
	
КонецПроцедуры

Процедура СоздатьПовторяющиесяСобытия()
	
	Если ПовторяемоеСобытие Тогда
		
		Документы.РасходДенежныхСредств.УдалитьВсеПовторяющиеСобытияПоДанномуОснованию(УИДПовторяемыхСобытий, Ссылка);
		
		Если ВидПовторяемогоСобытий = Перечисления.ВидыПовторяемыхСобытий.ПовторятьЧерезНесколькоДней И КоличествоДнейДляПовторения <> 0 Тогда
			
			ДатаСозданияНовогоПовторяемогоСобытия = ОбщегоНазначенияСервер.ДобавитьКДате(Дата, КоличествоДнейДляПовторения, "ДЕНЬ");
			
			Пока ДатаСозданияНовогоПовторяемогоСобытия < ДатаОкончанияПовторяемыхСобытий Цикл
				
				НовыйДокумент = СоздатьДокументПоПовторяющемусяСобытию(ДатаСозданияНовогоПовторяемогоСобытия);
				
				ДатаСозданияНовогоПовторяемогоСобытия = ОбщегоНазначенияСервер.ДобавитьКДате(
					НовыйДокумент.Дата, 
					КоличествоДнейДляПовторения,
					"ДЕНЬ");
				
			КонецЦикла;
			
		ИначеЕсли ВидПовторяемогоСобытий = Перечисления.ВидыПовторяемыхСобытий.ПовторятьВКонкретнуюДату Тогда
			
			ДатаСозданияНовогоПовторяемогоСобытия = ОбщегоНазначенияСервер.ДобавитьКДате(Дата, 1, "МЕСЯЦ");
			Если КонецДня(Дата) = КонецМесяца(Дата) Тогда
				ДатаСозданияНовогоПовторяемогоСобытия = КонецМесяца(ДатаСозданияНовогоПовторяемогоСобытия);	
			КонецЕсли;
			
			Пока ДатаСозданияНовогоПовторяемогоСобытия < ДатаОкончанияПовторяемыхСобытий Цикл
				
				НовыйДокумент = СоздатьДокументПоПовторяющемусяСобытию(ДатаСозданияНовогоПовторяемогоСобытия);
				
				ДатаСозданияНовогоПовторяемогоСобытия = ОбщегоНазначенияСервер.ДобавитьКДате(НовыйДокумент.Дата, 1, "МЕСЯЦ");
				Если КонецДня(Дата) = КонецМесяца(Дата) Тогда
					ДатаСозданияНовогоПовторяемогоСобытия = КонецМесяца(ДатаСозданияНовогоПовторяемогоСобытия);	
				КонецЕсли;
				
			КонецЦикла;
				
		КонецЕсли;		
		
	КонецЕсли;
	
КонецПроцедуры

Функция СоздатьДокументПоПовторяющемусяСобытию(ДатаСозданияНовогоПовторяемогоСобытия)
	
	НовыйДокумент = Документы.РасходДенежныхСредств.СоздатьДокумент();
	НовыйДокумент.Дата = ДатаСозданияНовогоПовторяемогоСобытия;
	НовыйДокумент.ВидРасхода = Перечисления.ВидыРасходов.Планируемый;
	НовыйДокумент.Сумма = Сумма;
	НовыйДокумент.Назначение = Назначение;
	НовыйДокумент.УИДПовторяемыхСобытий = УИДПовторяемыхСобытий;
	НовыйДокумент.Записать(РежимЗаписиДокумента.Проведение);
	
	Возврат НовыйДокумент;

КонецФункции

#КонецОбласти